name: Build and Release

on:
  workflow_call:
    inputs:
      assets-artifact-name:
        required: true
        type: string
        description: "Name of the artifact containing compiled assets"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: hakanai
            name: hakanai-darwin-x86_64.tar.gz
            command: build

          - release_for: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: hakanai
            name: hakanai-darwin-aarch64.tar.gz
            command: build

          - release_for: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: hakanai
            name: hakanai-linux-x86_64.tar.gz
            command: build

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download pre-compiled assets
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.assets-artifact-name }}
          path: server/includes/

      - name: Set skip build flags
        run: |
          echo "SKIP_TYPESCRIPT_BUILD=1" >> $GITHUB_ENV
          echo "SKIP_WASM_BUILD=1" >> $GITHUB_ENV

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform.target }}

      - name: Build
        run: cargo build --release --workspace --target ${{ matrix.platform.target }}

      - name: Prepare artifacts [macOS/Linux]
        if: matrix.platform.os != 'windows-latest'
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          cd -

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: ${{ matrix.platform.name }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download platform artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "hakanai-*"
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
